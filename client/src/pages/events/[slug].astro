---
import { PortableText } from "astro-portabletext";
import DefaultLayout from "../../layouts/default.astro";
import PageBuilder from "../../components/page-builder.astro";
import Map from "../../components/map.astro";

export async function getStaticPaths() {
  const events = await sanityClient.fetch(`*[_type == "event"] {
    ...,
    assets[] {
      ...,
      file {
        ...,
        asset->
      }
    }
  }`);

  return events.map((event) => {
    return {
      params: {
        slug: event.slug.current,
      },
      props: { ...event },
    };
  });
}

const { props: event } = Astro;
console.log({ event });
---

<DefaultLayout>
  <h1
    class="text-4xl md:text-5xl uppercase font-bold content-block mb-4 md:mb-6 lg:mb-10"
  >
    {event.title}
  </h1>
  <div class="content-block">
    <a
      target="_blank"
      rel="noreferrer"
      href={event.registrationLink}
      class="button w-full text-center text-xl smd:text-2xl md:text-3xl mb-4 md:mb-6 lg:mb-10"
      >Enter Here</a
    >
  </div>

  {
    event.excerpt && (
      <div class="content-block mb-4 md:mb-6 lg:mb-10">
        <PortableText value={event.excerpt} />
      </div>
    )
  }
  {
    event.stages?.length > 0 && (
      <div class="content-block mb-4 md:mb-6 lg:mb-10">
        <ul class="list-none flex flex-col md:flex-row justify-center border-y-2 border-black ml-0">
          {event.stages.map((stage) => (
            <li class="border-b-2 md:border-b-0 md:border-r-2 mr-8 pr-8 border-black text-center last:border-none w-full py-4">
              <p class="text-xl uppercase font-semibold">{stage.type}</p>
              <p class="text-2xl font-bold">{stage.distance}</p>
            </li>
          ))}
        </ul>
      </div>
    )
  }
  {
    event.content && (
      <div class="content-block mb-4 md:mb-6 lg:mb-10">
        <PageBuilder blocks={event.content} />
      </div>
    )
  }
  <div class="content-block mb-4 md:mb-6 lg:mb-10">
    <h2
      class="uppercase text-2xl sm:text-3xl md:text-4xl font-bold mb-4 md:mb-6 lg:mb-10"
    >
      Useful Files
    </h2>
    <ul
      class="list-none ml-0 grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8"
    >
      {
        event.assets?.map((asset) => (
          <li class="mb-2 border-2 border-black sm:p-4">
            <a
              href={asset.file.asset.url}
              class="block p-4 text-2xl md:text-3xl"
              target="_blank"
            >
              {asset.file.asset.url.includes(".pdf") && (
                <svg
                  xmlns="http://www.w3.org/2000/svg"
                  fill="none"
                  viewBox="0 0 24 24"
                  stroke-width="1.5"
                  stroke="currentColor"
                  class="w-8 h-8 mb-2"
                >
                  <path
                    stroke-linecap="round"
                    stroke-linejoin="round"
                    d="M19.5 14.25v-2.625a3.375 3.375 0 0 0-3.375-3.375h-1.5A1.125 1.125 0 0 1 13.5 7.125v-1.5a3.375 3.375 0 0 0-3.375-3.375H8.25m2.25 0H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 0 0-9-9Z"
                  />
                </svg>
              )}
              {asset.caption}
            </a>
          </li>
        ))
      }
    </ul>
  </div>
  <div class="content-block mb-4 md:mb-6 lg:mb-10">
    <h2
      class="uppercase text-2xl sm:text-3xl md:text-4xl font-bold mb-4 md:mb-6 lg:mb-10"
    >
      Where is it?
    </h2>
    <div class="flex flex-col-reverse sm:flex-row mb-4 md:mb-6 lg:mb-10">
      <ul class="w-full list-none ml-0 leading-tight">
        {
          event.location?.line_one && (
            <li class="mb-2">{event.location.line_one}</li>
          )
        }
        {
          event.location?.line_two && (
            <li class="mb-2">{event.location.line_two}</li>
          )
        }
        {
          event.location?.line_three && (
            <li class="mb-2">{event.location.line_three}</li>
          )
        }
        {event.location?.city && <li class="mb-2">{event.location.city}</li>}
        {
          event.location?.postcode && (
            <li class="mb-2">{event.location.postcode}</li>
          )
        }
      </ul>
      <div>
        <a
          class="button inline-block text-nowrap mb-4 md:mb-0"
          href={event.location?.maplink}
          ><span class="pseudo-underline">Show on Google Maps</span></a
        >
      </div>
    </div>
    {event.location?.maplink && <Map maplink={event.location.maplink} />}
  </div>
</DefaultLayout>
